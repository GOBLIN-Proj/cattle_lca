:py:mod:`cattle_lca.resource_manager.database_manager`
======================================================

.. py:module:: cattle_lca.resource_manager.database_manager

.. autoapi-nested-parse::

   Database Manager Module
   -----------------------

   This module contains the DataManager class, which is responsible for handling the retrieval of country-specific and generic data
   from the SQL database for use in lifecycle assessment calculations.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   cattle_lca.resource_manager.database_manager.DataManager




.. py:class:: DataManager(ef_country)


   DataManager handles the retrieval of country-specific and generic data from the SQL database for use in lifecycle assessment calculations.
   It utilizes SQLAlchemy for database connection and operations.
   The data is returned as Pandas DataFrames for easy manipulation and access within the Python ecosystem.

   .. attribute:: database_dir

      Directory where the SQL database is stored.

      :type: str

   .. attribute:: engine

      SQLAlchemy engine instance for connecting to the database.

      :type: sqa.engine.Engine

   .. attribute:: ef_country

      The country identifier used to retrieve country-specific data.

      :type: str

   :param ef_country: A string representing the country for which the data is to be loaded. It is used to filter the data in country-specific tables.
   :type ef_country: str

   .. method:: data_engine_creater()

      Initializes and returns a SQLAlchemy engine connected to the local cattle LCA database.

   .. method:: grass_data(index=None)

      Retrieves grass-related data from the database. Optional index parameter sets a column as DataFrame index.

   .. method:: upstream_data(index=None)

      Retrieves upstream (pre-farm gate inputs and processes) data. Optional index parameter for DataFrame indexing.

   .. method:: emissions_factor_data(index=None)

      Fetches emissions factors specific to the set country. Can set an index column if provided.

   .. method:: concentrate_data(index=None)

      Gathers data regarding animal feed concentrates. Optional indexing with the index parameter.

   .. method:: animal_features_data(index=None)

      Collects data related to the features of various animal types, filtered by country. Indexing option available.
      

   .. py:method:: data_engine_creater()

      Initializes and returns a SQLAlchemy engine connected to the local cattle LCA database.

      :returns: SQLAlchemy engine instance for connecting to the database.
      :rtype: sqa.engine.Engine


   .. py:method:: grass_data(index=None)

      Retrieves grass-related data from the database. Optional index parameter sets a column as DataFrame index.

      :param index: The column to use as the DataFrame index.
      :type index: str

      :returns: A DataFrame containing grass-related data.
      :rtype: pd.DataFrame


   .. py:method:: upstream_data(index=None)

      Retrieves upstream (pre-farm gate inputs and processes) data. Optional index parameter for DataFrame indexing.

      :param index: The column to use as the DataFrame index.
      :type index: str

      :returns: A DataFrame containing upstream data.
      :rtype: pd.DataFrame


   .. py:method:: emissions_factor_data(index=None)

      Fetches emissions factors specific to the set country. Can set an index column if provided.

      :param index: The column to use as the DataFrame index.
      :type index: str

      :returns: A DataFrame containing emissions factors data.
      :rtype: pd.DataFrame


   .. py:method:: concentrate_data(index=None)

      Gathers data regarding animal feed concentrates. Optional indexing with the index parameter.

      :param index: The column to use as the DataFrame index.
      :type index: str

      :returns: A DataFrame containing concentrate feed data.
      :rtype: pd.DataFrame


   .. py:method:: animal_features_data(index=None)

      Collects data related to the features of various animal types, filtered by country. Indexing option available.

      :param index: The column to use as the DataFrame index.
      :type index: str

      :returns: A DataFrame containing animal features data.
      :rtype: pd.DataFrame



